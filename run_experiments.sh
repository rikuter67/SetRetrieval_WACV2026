#!/bin/bash

# =================================================================
#                 ÂÆüÈ®ìË®≠ÂÆö („Åì„Åì„ÇíÁ∑®ÈõÜ)
# =================================================================

# --- Âõ∫ÂÆö„Åô„ÇãÂü∫Êú¨Ë®≠ÂÆö ---
DATASET="DeepFurniture"
FIXED_ARGS="--dataset $DATASET \
    --mode train \
    --data_dir ./data \
    --dataset_dir ./datasets \
    --use_weighted_topk \
    --candidate_neg_num 50 \
    --batch_size 64 \
    --epochs 500 \
    --seed 42 \
    --taneg_curriculum_epochs 100 \
    --learning_rate 1e-4"

# --- „Çπ„Ç§„Éº„Éó„Åô„Çã„Éè„Ç§„Éë„Éº„Éë„É©„É°„Éº„Çø ---
# (ÂÆüË°åÊôÇÈñì„ÅåÈï∑„Åè„Å™„Çä„Åô„Åé„Å™„ÅÑ„Çà„ÅÜ„Å´„ÄÅÁµÑ„ÅøÂêà„Çè„Åõ„ÇíÁµû„Å£„Å¶„ÅÑ„Åæ„Åô„ÄÇËá™Áî±„Å´ËøΩÂä†„ÉªÂ§âÊõ¥„Åó„Å¶„Åè„Å†„Åï„ÅÑ)

# TaNeg„ÅÆŒ≥Ôºà„Ç¨„É≥„ÉûÔºâ„ÅÆÁØÑÂõ≤ ("ÂàùÊúüÂÄ§ ÊúÄÁµÇÂÄ§")
GAMMA_RANGES=(
    "0.2 0.4"
)

# Ê∏©Â∫¶ (temperature) - „Åæ„Åö„ÅØÂõ∫ÂÆö„Åó„Å¶‰ªñ„ÅÆÂΩ±Èüø„ÇíË¶ã„Çã
TEMPERATURES=(0.8)

# PaNeg„ÅÆŒµ (epsilon) - „Åæ„Åö„ÅØÂõ∫ÂÆö
EPSILONS=(0.2)

# Cycle Loss„ÅÆŒª (lambda)
CYCLE_LAMBDAS=(0.2)


# =================================================================
#                     4ÊâãÊ≥ïÊØîËºÉÂÆüÈ®ì„ÅÆÂÆüË°å
# =================================================================

# # --- ÊâãÊ≥ï1: „Éô„Éº„Çπ„É©„Ç§„É≥ (Cycle LossÁÑ°„Åó, TPaNegÁÑ°„Åó) ---
echo "#################################################################"
echo "### STARTING METHOD 1: BASELINE (No Cycle Loss, No TPaNeg)    ###"
echo "#################################################################"

COMMAND="TF_XLA_FLAGS=--tf_xla_auto_jit=0 CUDA_VISIBLE_DEVICES=0 python run.py \
    $FIXED_ARGS"

echo "================================================================="
echo ">>> Running Method 1 (Baseline): No additional components"
echo "================================================================="
eval $COMMAND


# # --- ÊâãÊ≥ï2: Cycle Loss „ÅÆ„Åø ---
# echo "#################################################################"
# echo "### STARTING METHOD 2: Cycle Loss ON, TPaNeg OFF              ###"
# echo "#################################################################"
# for lambda in "${CYCLE_LAMBDAS[@]}"; do
    
#     # „Ç≥„Éû„É≥„ÉâÁµÑ„ÅøÁ´ã„Å¶
#     COMMAND="TF_XLA_FLAGS=--tf_xla_auto_jit=0 CUDA_VISIBLE_DEVICES=0 python run.py \
#         $FIXED_ARGS \
#         --use_cycle_loss \
#         --cycle_lambda $lambda"

#     # ÂÆüË°å
#     echo "================================================================="
#     echo ">>> Running Method 2 | Cycle Lambda = $lambda"
#     echo "================================================================="
#     eval $COMMAND
# done


# --- ÊâãÊ≥ï3: TPaNeg „ÅÆ„Åø ---
# echo "#################################################################"
# echo "### STARTING METHOD 3: Cycle Loss OFF, TPaNeg ON              ###"
# echo "#################################################################"
# for range in "${GAMMA_RANGES[@]}"; do
#     read -r -a gamma_pair <<< "$range"
#     gamma_init=${gamma_pair[0]}
#     gamma_final=${gamma_pair[1]}
#     for temp in "${TEMPERATURES[@]}"; do
#         for eps in "${EPSILONS[@]}"; do
            
#             # „Ç≥„Éû„É≥„ÉâÁµÑ„ÅøÁ´ã„Å¶
#             COMMAND="TF_XLA_FLAGS=--tf_xla_auto_jit=0 CUDA_VISIBLE_DEVICES=0 python run.py \
#                 $FIXED_ARGS \
#                 --use_tpaneg \
#                 --taneg_t_gamma_init $gamma_init \
#                 --taneg_t_gamma_final $gamma_final \
#                 --temperature $temp \
#                 --paneg_epsilon $eps"
            
#             # ÂÆüË°å
#             echo "================================================================="
#             echo ">>> Running Method 3 | Gamma=$gamma_init->$gamma_final, Temp=$temp, Epsilon=$eps"
#             echo "================================================================="
#             eval $COMMAND
#         done
#     done
# done


# # --- ÊâãÊ≥ï4: Cycle Loss + TPaNeg (ÊèêÊ°àÊâãÊ≥ï) ---
# echo "#################################################################"
# echo "### STARTING METHOD 4: Cycle Loss ON, TPaNeg ON (PROPOSED)    ###"
# echo "#################################################################"
# for lambda in "${CYCLE_LAMBDAS[@]}"; do
#     for range in "${GAMMA_RANGES[@]}"; do
#         read -r -a gamma_pair <<< "$range"
#         gamma_init=${gamma_pair[0]}
#         gamma_final=${gamma_pair[1]}
#         for temp in "${TEMPERATURES[@]}"; do
#             for eps in "${EPSILONS[@]}"; do
                
#                 # „Ç≥„Éû„É≥„ÉâÁµÑ„ÅøÁ´ã„Å¶
#                 COMMAND="TF_XLA_FLAGS=--tf_xla_auto_jit=0 CUDA_VISIBLE_DEVICES=0 python run.py \
#                     $FIXED_ARGS \
#                     --use_tpaneg \
#                     --use_cycle_loss \
#                     --taneg_t_gamma_init $gamma_init \
#                     --taneg_t_gamma_final $gamma_final \
#                     --temperature $temp \
#                     --paneg_epsilon $eps \
#                     --cycle_lambda $lambda"
                
#                 # ÂÆüË°å
#                 echo "================================================================="
#                 echo ">>> Running Method 4 (PROPOSED) | Lambda=$lambda, Gamma=$gamma_init->$gamma_final, Temp=$temp, Epsilon=$eps"
#                 echo "================================================================="
#                 eval $COMMAND
#             done
#         done
#     done
# done


# =================================================================
#                     ÂÆüÈ®ìÂÆå‰∫ÜÂæå„ÅÆÂá¶ÁêÜ
# =================================================================
echo "‚úÖ All 4 methods comparison experiments finished."
echo ""
echo "=== EXPERIMENT SUMMARY ==="
echo "Method 1: Baseline (No additional components)"
echo "Method 2: Cycle Loss only (Œª=${CYCLE_LAMBDAS[*]})"
echo "Method 3: TPaNeg only (Œ≥=${GAMMA_RANGES[*]}, T=${TEMPERATURES[*]}, Œµ=${EPSILONS[*]})"  
echo "Method 4: Cycle Loss + TPaNeg (PROPOSED)"
echo ""
echo "üîç Check the results in the output logs and saved model directories."
echo "üìä Compare the evaluation metrics across all 4 methods."